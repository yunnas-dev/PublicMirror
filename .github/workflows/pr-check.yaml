name: PR Bot Response

on:
  check_suite:
    types: [completed]
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'charts/**'

jobs:
  bot-response:
    runs-on: ubuntu-latest
    if: github.event.check_suite.conclusion == 'failure'
    permissions:
      checks: read
      pull-requests: write
      issues: write
    
    steps:
      - uses: actions/checkout@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.3

      - name: Validate Charts
        id: validate
        run: |
          failed_checks=()
          
          for chart in $(find ./charts/stable -name Chart.yaml -exec dirname {} \;); do
            # 检查必需文件
            for file in Chart.yaml values.yaml values.schema.json README.md; do
              if [ ! -f "$chart/$file" ]; then
                failed_checks+=("缺少必需文件：$file，位于 $chart")
              fi
            done
            
            # 检查 Chart.yaml 必需字段
            required_fields=("apiVersion" "name" "description" "version" "appVersion" "annotations")
            for field in "${required_fields[@]}"; do
              if ! yq e ".$field" "$chart/Chart.yaml" > /dev/null 2>&1; then
                failed_checks+=("Chart.yaml 中缺少必需字段：$field")
              fi
            done
            
            # Helm lint 检查
            if ! helm lint "$chart"; then
              failed_checks+=("Helm lint 检查失败：$chart")
            fi
          done
          
          # 将失败项写入环境变量
          if [ ${#failed_checks[@]} -ne 0 ]; then
            echo "FAILED_CHECKS<<EOF" >> $GITHUB_ENV
            printf '%s\n' "${failed_checks[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            exit 1
          fi

      - uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request?.number || context.payload.check_suite.pull_requests[0]?.number;
            
            if (!prNumber) return;
            
            const failedChecks = process.env.FAILED_CHECKS?.split('\n').filter(Boolean) || [];
            
            let comment = `❌ PR检查失败\n\n`;
            comment += `失败的检查项:\n`;
            failedChecks.forEach(check => {
              comment += `- ${check}\n`;
            });
            comment += `\n请参考文档: [Chart开发规范](../docs/charts/STANDARDS.md)\n\n`;
            comment += `修复后重新提交即可触发检查。`;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: comment
            });

            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: prNumber,
              labels: ['needs-fix']
            });