name: PR Check

on:
  pull_request:
    paths:
      - 'charts/**'

jobs:
  validate-charts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.3

      - name: Validate Chart Structure
        run: |
          for chart in $(find ./charts/stable -name Chart.yaml -exec dirname {} \;); do
            # 检查必需文件
            for file in Chart.yaml values.yaml values.schema.json README.md; do
              if [ ! -f "$chart/$file" ]; then
                echo "❌ Missing required file: $file in $chart"
                exit 1
              fi
            done
            
            # 检查 Chart.yaml 必需字段
            required_fields=("apiVersion" "name" "description" "version" "appVersion" "annotations")
            for field in "${required_fields[@]}"; do
              if ! yq e ".$field" "$chart/Chart.yaml" > /dev/null 2>&1; then
                echo "❌ Missing required field '$field' in Chart.yaml"
                exit 1
              fi
            done
            
            # 检查资源配置
            if ! grep -q "resources:" "$chart/values.yaml"; then
              echo "❌ Missing resources configuration in values.yaml"
              exit 1
            fi
            
            # 检查持久化配置
            if ! grep -q "persistence:" "$chart/values.yaml"; then
              echo "❌ Missing persistence configuration in values.yaml"
              exit 1
            fi

            # 检查环境变量定义
            if ! grep -q "env:" "$chart/values.yaml"; then
              echo "❌ Missing env configuration in values.yaml"
              exit 1
            fi
          done

      - name: Validate Helm Templates
        run: |
          for chart in $(find ./charts/stable -name Chart.yaml -exec dirname {} \;); do
            echo "Linting chart: $chart"
            helm lint "$chart"
            
            echo "Testing template rendering: $chart"
            helm template test "$chart"
          done

      - name: Validate JSON Schema
        run: |
          for schema in $(find ./charts/stable -name values.schema.json); do
            if ! jq empty "$schema"; then
              echo "❌ Invalid JSON schema: $schema"
              exit 1
            fi
            
            # 检查必需的 schema 属性
            required_props=("replicaCount" "resources" "persistence" "env")
            for prop in "${required_props[@]}"; do
              if ! jq -e ".properties.$prop" "$schema" > /dev/null; then
                echo "❌ Missing required property '$prop' in schema"
                exit 1
              fi
            done
          done