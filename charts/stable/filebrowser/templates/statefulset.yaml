apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "filebrowser.fullname" . }}
  labels:
    {{- include "filebrowser.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "filebrowser.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "filebrowser.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "filebrowser.labels" . | nindent 8 }}
    spec:
      containers:
        - name: filebrowser
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            {{- if kindIs "map" .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $value.name }}
              value: {{ $value.value | quote }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: srv
              mountPath: /srv
            - name: config
              mountPath: /var/config
            - name: config-file
              mountPath: /var/config/.filebrowser.json
              subPath: .filebrowser.json
            - name: database-file
              mountPath: /var/config/database.db
              subPath: database.db
          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 30
  volumeClaimTemplates:
    - metadata:
        name: srv
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.srvSize }}
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.configSize }}